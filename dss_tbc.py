import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import random

# --- Configuraci칩n general ---
grupo_indicador = 'TBC'
st.title("游낀 Monitor de Desigualdades en Salud - Regi칩n Metropolitana")
st.warning("**Datos fake generados para prototipo**")
st.warning("Los resultados se presentan solo a nivel de quintil, ya que el tama침o muestral no permite desagregaci칩n comunal v치lida.")

# --- Selecci칩n eje de desigualdad ---
grupo_desigualdad = st.sidebar.selectbox(
    "游늷 Selecciona el eje de desigualdad:",
    options=["Pobreza por ingresos", "Escolaridad", "Migraci칩n", "Hacinamiento"]
)

# --- Variables base ---
quintiles = ['Q1', 'Q2', 'Q3', 'Q4', 'Q5']
COMUNAS_RM = [
    'Alhu칠', 'Buin', 'Calera de Tango', 'Cerrillos', 'Cerro Navia', 'Colina', 'Conchal칤',
    'Curacav칤', 'El Bosque', 'El Monte', 'Estaci칩n Central', 'Huechuraba', 'Independencia',
    'Isla de Maipo', 'La Cisterna', 'La Florida', 'La Granja', 'La Pintana', 'La Reina', 'Lampa',
    'Las Condes', 'Lo Barnechea', 'Lo Espejo', 'Lo Prado', 'Macul', 'Maip칰', 'Maria Pinto',
    'Melipilla', '칌u침oa', 'Padre Hurtado', 'Paine', 'Pedro Aguirre Cerda', 'Pe침aflor',
    'Pe침alol칠n', 'Pirque', 'Providencia', 'Pudahuel', 'Puente Alto', 'Quilicura', 'Quinta Normal',
    'Recoleta', 'Renca', 'San Bernardo', 'San Joaqu칤n', 'San Jos칠 de Maipo', 'San Miguel',
    'San Pedro', 'San Ram칩n', 'Santiago', 'Talagante', 'Tiltil', 'Vitacura'
]

# Asignar comunas aleatorias a quintiles
comunas_aleatorias = random.sample(COMUNAS_RM, k=3 * len(quintiles))
quintil_dict = {
    q: comunas_aleatorias[i*3:(i+1)*3]
    for i, q in enumerate(quintiles)
}

years = [2017, 2022]
comunas_por_quintil = 3

# --- Crear tabla base con datos simulados ---
rows_base = []
for year in years:
    for q in quintiles:
        comuna_list = quintil_dict[q]
        poblacion_total = np.random.randint(300000, 1000000)
        casos = np.random.randint(150, 800)
        tasa = (casos / poblacion_total) * 100000
        ic_min = max(tasa - np.random.uniform(0.5, 2.0), 0)
        ic_max = tasa + np.random.uniform(0.5, 2.0)

        rows_base.append({
            'A침o': year,
            'Quintil': q,
            'Comunas': ', '.join(comuna_list),
            'Grupo Desigualdad': grupo_desigualdad,
            'N춿 Casos': casos,
            'Poblaci칩n Total': poblacion_total,
            'Tasa Incidencia (x100k)': round(tasa, 2),
            'IC 95%': f"{round(ic_min, 2)} - {round(ic_max, 2)}"
        })

tabla_base = pd.DataFrame(rows_base)

# --- Selecci칩n din치mica a침o para visualizar tabla y texto ---
st.sidebar.markdown("### 游늰 Selecci칩n de a침o")
anio_seleccionado = st.sidebar.selectbox("Selecciona el a침o a visualizar", options=years)

# --- Mostrar tabla base filtrada por a침o seleccionado ---
st.write(f"## 游늵 Tabla Base por Quintil - {grupo_indicador} ({grupo_desigualdad}) - A침o {anio_seleccionado}")
tabla_filtrada = tabla_base[tabla_base['A침o'] == anio_seleccionado]
st.dataframe(tabla_filtrada, use_container_width=True)

# --- Interpretaci칩n breve ---
st.markdown("""
### 游닀 Interpretaci칩n r치pida
- Una **brecha creciente** entre quintiles indica un aumento en la desigualdad, lo que suele ser negativo para la equidad en salud.
- Una **IRD (칈ndice Relativo de Desigualdad)** mayor que 1 indica desigualdad creciente; por ejemplo, IRD = 2.1 significa que la tasa en el grupo m치s favorecido es 2.1 veces la del m치s desfavorecido.
- Una **IAD (칈ndice Absoluto de Desigualdad)** mide la diferencia absoluta en tasas, por ejemplo, IAD = 12.3 indica 12.3 casos adicionales por 100,000 personas entre extremos.
- Importa la desigualdad en cada eje porque refleja distintas barreras sociales que afectan la salud.
""")

# --- Funci칩n para calcular resumen de desigualdad por a침o ---
def calcular_resumen(df):
    resumen = []
    for year in years:
        df_year = df[df['A침o'] == year].copy()
        tasas = df_year.set_index('Quintil')['Tasa Incidencia (x100k)'].sort_index()
        tasa_q1 = tasas['Q1']
        tasa_q5 = tasas['Q5']
        brecha_abs = tasa_q5 - tasa_q1
        brecha_rel = tasa_q5 / tasa_q1 if tasa_q1 != 0 else np.nan
        rr_min = round(brecha_rel - np.random.uniform(0.1, 0.4), 2)
        rr_max = round(brecha_rel + np.random.uniform(0.1, 0.4), 2)
        irs = round(np.random.uniform(1.5, 3.0), 3)
        iads = round(np.random.uniform(8.0, 15.0), 3)

        resumen.append({
            'A침o': year,
            'Tasa Q1': round(tasa_q1, 2),
            'Tasa Q5': round(tasa_q5, 2),
            'Brecha Absoluta': round(brecha_abs, 2),
            'Brecha Relativa': round(brecha_rel, 2),
            'RR (IC 95%)': f"{round(brecha_rel, 2)} ({rr_min} - {rr_max})",
            'IRD': irs,
            'IAD': iads,
        })
    return pd.DataFrame(resumen)

tabla_resumen = calcular_resumen(tabla_base)

# --- Mostrar resumen de desigualdades ---
st.subheader(f"游늴 Resumen de Desigualdades por A침o - {grupo_indicador} ({grupo_desigualdad})")
def color_semaforo(row):
    color_abs = 'background-color: #FFCDD2' if row['Brecha Absoluta'] > 10 else ''
    color_ird = 'background-color: #C8E6C9' if row['IRD'] < 2 else ''
    return [color_abs if col == 'Brecha Absoluta' else color_ird if col == 'IRD' else '' for col in row.index]
st.dataframe(tabla_resumen.style.apply(color_semaforo, axis=1), use_container_width=True)

# --- Texto interpretativo din치mico para el a침o seleccionado ---
tasa_q1_sel = tabla_resumen.loc[tabla_resumen['A침o'] == anio_seleccionado, 'Tasa Q1'].values[0]
tasa_q5_sel = tabla_resumen.loc[tabla_resumen['A침o'] == anio_seleccionado, 'Tasa Q5'].values[0]
brecha_abs_sel = tabla_resumen.loc[tabla_resumen['A침o'] == anio_seleccionado, 'Brecha Absoluta'].values[0]

st.markdown(f"""
### 游댌 Interpretaci칩n para el a침o {anio_seleccionado}

- En {anio_seleccionado}, la tasa en el quintil m치s desfavorecido (Q1) fue de {tasa_q1_sel} casos por 100,000, mientras que en el quintil m치s favorecido (Q5) fue de {tasa_q5_sel}.
- Esto representa una brecha absoluta de {brecha_abs_sel:.2f} casos por 100,000 habitantes.
- Una brecha creciente puede indicar un empeoramiento de la desigualdad en salud seg칰n el eje de {grupo_desigualdad}.
""")

# --- Gr치fico de barras CON TODOS LOS A칌OS ---
# Preparamos datos para barras con todos los a침os, agrupando por A침o y Quintil
tabla_base[['IC Inferior', 'IC Superior']] = tabla_base['IC 95%'].str.split(' - ', expand=True).astype(float)

fig_bar = px.bar(
    tabla_base,
    x='Quintil',
    y='Tasa Incidencia (x100k)',
    color='A침o',
    barmode='group',
    error_y=tabla_base['IC Superior'] - tabla_base['Tasa Incidencia (x100k)'],
    error_y_minus=tabla_base['Tasa Incidencia (x100k)'] - tabla_base['IC Inferior'],
    hover_data=['Comunas', 'N춿 Casos', 'Poblaci칩n Total', 'IC 95%'],
    title=f"Tasa Incidencia por Quintil y A침o ({grupo_desigualdad})"
)
fig_bar.update_layout(xaxis_title="Quintil", yaxis_title="Tasa Incidencia (x100k)")
# st.plotly_chart(fig_bar, use_container_width=True)

# --- Gr치fico de l칤neas con evoluci칩n temporal de brechas ---
import plotly.graph_objects as go

# Preparar datos por quintil y a침o
fig = go.Figure()

for year in years:
    df_year = tabla_base[tabla_base['A침o'] == year]
    fig.add_trace(go.Bar(
        x=df_year['Quintil'],
        y=df_year['Tasa Incidencia (x100k)'],
        name=str(year),
        error_y=dict(
            type='data',
            symmetric=False,
            array=df_year['IC Superior'] - df_year['Tasa Incidencia (x100k)'],
            arrayminus=df_year['Tasa Incidencia (x100k)'] - df_year['IC Inferior']
        ),
        text=df_year['IC 95%'],
        hoverinfo='x+y+text'
    ))

fig.update_layout(
    barmode='group',
    title=f"Tasa Incidencia por Quintil y A침o ({grupo_desigualdad})",
    xaxis_title="Quintil",
    yaxis_title="Tasa Incidencia (x100k)",
    bargap=0.15,
    bargroupgap=0.1,
)

st.plotly_chart(fig, use_container_width=True)

# --- Glosario ---
st.sidebar.markdown("## 游닄 Glosario")
st.sidebar.markdown("""
- **Tasa de Incidencia:** n칰mero de casos nuevos por cada 100,000 habitantes.
- **Brecha Relativa:** raz칩n entre la tasa del quintil m치s favorecido y la del m치s desfavorecido.
- **IRD (칈ndice Relativo de Desigualdad):** mide la desigualdad relativa en la poblaci칩n; IRD > 1 indica desigualdad.
- **IAD (칈ndice Absoluto de Desigualdad):** diferencia absoluta entre las tasas de los extremos.
- **Quintil:** grupo que divide a la poblaci칩n en cinco partes iguales seg칰n el eje de desigualdad.
""")
